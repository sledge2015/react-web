// src/pages/Dashboard/index.tsx - 更新后的主页面import React, { useState, useCallback } from 'react';import { Card, Empty, message } from 'antd';import { useAuth } from '../../hooks/useAuth';import MainLayout from '../../layouts/MainLayout';import PortfolioPage from '../Portfolio';import Market from '../Market';import AdminPanel from '../../components/AdminPanel';const Dashboard: React.FC = () => {  const { hasPermission } = useAuth();  const [selectedMenu, setSelectedMenu] = useState('portfolio');  const [refreshing, setRefreshing] = useState(false);  // 处理菜单切换  const handleMenuChange = useCallback((key: string) => {    console.log('Menu changed to:', key);    setSelectedMenu(key);  }, []);  // 处理刷新  const handleRefresh = useCallback(async () => {    setRefreshing(true);    try {      // 根据当前选中的菜单决定刷新逻辑      if (selectedMenu.startsWith('admin')) {        // 管理面板刷新        window.dispatchEvent(new CustomEvent('refreshData', {          detail: { activeMenu: selectedMenu }        }));      } else if (selectedMenu === 'portfolio') {        // 投资组合刷新        window.dispatchEvent(new CustomEvent('refreshData', {          detail: { activeMenu: selectedMenu }        }));      } else {        // 其他页面的刷新        message.info(`${selectedMenu} 页面刷新功能开发中...`);      }    } catch (error) {      console.error('刷新失败:', error);      message.error('刷新失败，请稍后重试');    } finally {      setTimeout(() => setRefreshing(false), 1000); // 给用户一个刷新的反馈    }  }, [selectedMenu]);  // 渲染主要内容  const renderContent = () => {    switch (selectedMenu) {      case 'portfolio':        return <PortfolioPage />;      case 'admin':      case 'admin-overview':      case 'admin-users':      case 'admin-system':      case 'admin-logs':        if (!hasPermission('system.config')) {          return (            <Card>              <Empty                description="权限不足，无法访问系统管理"                image="/api/placeholder/400/300"              />            </Card>          );        }        return <AdminPanel activeTab={selectedMenu} />;      case 'watchlist':        return (          <Card>            <Empty              description="关注列表功能开发中..."              image="/api/placeholder/400/300"            />          </Card>        );      case 'market':        return <Market />;        // return (        //   <Card>        //     <Empty        //       description="市场行情功能开发中..."        //       image="/api/placeholder/400/300"        //     />        //   </Card>        // );      case 'analysis':        return (          <Card>            <Empty              description="分析工具功能开发中..."              image="/api/placeholder/400/300"            />          </Card>        );      case 'favorites':        return (          <Card>            <Empty              description="收藏夹功能开发中..."              image="/api/placeholder/400/300"            />          </Card>        );      default:        return (          <Card>            <Empty description="页面不存在" />          </Card>        );    }  };  return (    <MainLayout      activeMenu={selectedMenu}      onMenuChange={handleMenuChange}      refreshing={refreshing}      onRefresh={handleRefresh}    >      {renderContent()}    </MainLayout>  );};export default Dashboard;